// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
import { APIResource } from "../../../resource.mjs";
import { isRequestOptions } from "../../../core.mjs";
import * as ArtifactsAPI from "./artifacts.mjs";
import * as LogsAPI from "./logs.mjs";
import * as StatusAPI from "./status.mjs";
export class Jobs extends APIResource {
    constructor() {
        super(...arguments);
        this.artifacts = new ArtifactsAPI.Artifacts(this._client);
        this.logs = new LogsAPI.Logs(this._client);
        this.status = new StatusAPI.Status(this._client);
    }
    list(params = {}, options) {
        if (isRequestOptions(params)) {
            return this.list({}, params);
        }
        const { 'X-LlamaStack-ProviderData': xLlamaStackProviderData } = params;
        return this._client.get('/evaluate/jobs', {
            ...options,
            headers: {
                ...(xLlamaStackProviderData != null ?
                    { 'X-LlamaStack-ProviderData': xLlamaStackProviderData }
                    : undefined),
                ...options?.headers,
            },
        });
    }
    cancel(params, options) {
        const { 'X-LlamaStack-ProviderData': xLlamaStackProviderData, ...body } = params;
        return this._client.post('/evaluate/job/cancel', {
            body,
            ...options,
            headers: {
                Accept: '*/*',
                ...(xLlamaStackProviderData != null ?
                    { 'X-LlamaStack-ProviderData': xLlamaStackProviderData }
                    : undefined),
                ...options?.headers,
            },
        });
    }
}
(function (Jobs) {
    Jobs.Artifacts = ArtifactsAPI.Artifacts;
    Jobs.Logs = LogsAPI.Logs;
    Jobs.Status = StatusAPI.Status;
})(Jobs || (Jobs = {}));
//# sourceMappingURL=jobs.mjs.map