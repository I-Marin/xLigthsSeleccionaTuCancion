import { APIResource } from "../resource.js";
import * as Core from "../core.js";
import * as ModelsAPI from "./models.js";
export declare class Models extends APIResource {
    list(params?: ModelListParams, options?: Core.RequestOptions): Core.APIPromise<ModelServingSpec>;
    list(options?: Core.RequestOptions): Core.APIPromise<ModelServingSpec>;
    get(params: ModelGetParams, options?: Core.RequestOptions): Core.APIPromise<ModelServingSpec | null>;
}
export interface ModelServingSpec {
    /**
     * The model family and SKU of the model along with other parameters corresponding
     * to the model.
     */
    llama_model: unknown;
    provider_config: ModelServingSpec.ProviderConfig;
}
export declare namespace ModelServingSpec {
    interface ProviderConfig {
        config: Record<string, boolean | number | string | Array<unknown> | unknown | null>;
        provider_id: string;
    }
}
export interface ModelListParams {
    /**
     * JSON-encoded provider data which will be made available to the adapter servicing
     * the API
     */
    'X-LlamaStack-ProviderData'?: string;
}
export interface ModelGetParams {
    /**
     * Query param:
     */
    core_model_id: string;
    /**
     * Header param: JSON-encoded provider data which will be made available to the
     * adapter servicing the API
     */
    'X-LlamaStack-ProviderData'?: string;
}
export declare namespace Models {
    export import ModelServingSpec = ModelsAPI.ModelServingSpec;
    export import ModelListParams = ModelsAPI.ModelListParams;
    export import ModelGetParams = ModelsAPI.ModelGetParams;
}
//# sourceMappingURL=models.d.ts.map