import { APIResource } from "../../resource.js";
import * as Core from "../../core.js";
import * as DocumentsAPI from "./documents.js";
export declare class Documents extends APIResource {
    retrieve(params: DocumentRetrieveParams, options?: Core.RequestOptions): Core.APIPromise<DocumentRetrieveResponse>;
    delete(params: DocumentDeleteParams, options?: Core.RequestOptions): Core.APIPromise<void>;
}
export interface DocumentRetrieveResponse {
    content: string | Array<string>;
    document_id: string;
    metadata: Record<string, boolean | number | string | Array<unknown> | unknown | null>;
    mime_type?: string;
}
export interface DocumentRetrieveParams {
    /**
     * Query param:
     */
    bank_id: string;
    /**
     * Body param:
     */
    document_ids: Array<string>;
    /**
     * Header param: JSON-encoded provider data which will be made available to the
     * adapter servicing the API
     */
    'X-LlamaStack-ProviderData'?: string;
}
export interface DocumentDeleteParams {
    /**
     * Body param:
     */
    bank_id: string;
    /**
     * Body param:
     */
    document_ids: Array<string>;
    /**
     * Header param: JSON-encoded provider data which will be made available to the
     * adapter servicing the API
     */
    'X-LlamaStack-ProviderData'?: string;
}
export declare namespace Documents {
    export import DocumentRetrieveResponse = DocumentsAPI.DocumentRetrieveResponse;
    export import DocumentRetrieveParams = DocumentsAPI.DocumentRetrieveParams;
    export import DocumentDeleteParams = DocumentsAPI.DocumentDeleteParams;
}
//# sourceMappingURL=documents.d.ts.map