import { APIResource } from "../../resource.js";
import * as Core from "../../core.js";
import * as MemoryAPI from "./memory.js";
import * as DocumentsAPI from "./documents.js";
export declare class Memory extends APIResource {
    documents: DocumentsAPI.Documents;
    create(params: MemoryCreateParams, options?: Core.RequestOptions): Core.APIPromise<unknown>;
    retrieve(params: MemoryRetrieveParams, options?: Core.RequestOptions): Core.APIPromise<unknown>;
    update(params: MemoryUpdateParams, options?: Core.RequestOptions): Core.APIPromise<void>;
    list(params?: MemoryListParams, options?: Core.RequestOptions): Core.APIPromise<unknown>;
    list(options?: Core.RequestOptions): Core.APIPromise<unknown>;
    drop(params: MemoryDropParams, options?: Core.RequestOptions): Core.APIPromise<string>;
    insert(params: MemoryInsertParams, options?: Core.RequestOptions): Core.APIPromise<void>;
    query(params: MemoryQueryParams, options?: Core.RequestOptions): Core.APIPromise<QueryDocuments>;
}
export interface QueryDocuments {
    chunks: Array<QueryDocuments.Chunk>;
    scores: Array<number>;
}
export declare namespace QueryDocuments {
    interface Chunk {
        content: string | Array<string>;
        document_id: string;
        token_count: number;
    }
}
export type MemoryCreateResponse = unknown;
export type MemoryRetrieveResponse = unknown;
export type MemoryListResponse = unknown;
export type MemoryDropResponse = string;
export interface MemoryCreateParams {
    /**
     * Body param:
     */
    body: unknown;
    /**
     * Header param: JSON-encoded provider data which will be made available to the
     * adapter servicing the API
     */
    'X-LlamaStack-ProviderData'?: string;
}
export interface MemoryRetrieveParams {
    /**
     * Query param:
     */
    bank_id: string;
    /**
     * Header param: JSON-encoded provider data which will be made available to the
     * adapter servicing the API
     */
    'X-LlamaStack-ProviderData'?: string;
}
export interface MemoryUpdateParams {
    /**
     * Body param:
     */
    bank_id: string;
    /**
     * Body param:
     */
    documents: Array<MemoryUpdateParams.Document>;
    /**
     * Header param: JSON-encoded provider data which will be made available to the
     * adapter servicing the API
     */
    'X-LlamaStack-ProviderData'?: string;
}
export declare namespace MemoryUpdateParams {
    interface Document {
        content: string | Array<string>;
        document_id: string;
        metadata: Record<string, boolean | number | string | Array<unknown> | unknown | null>;
        mime_type?: string;
    }
}
export interface MemoryListParams {
    /**
     * JSON-encoded provider data which will be made available to the adapter servicing
     * the API
     */
    'X-LlamaStack-ProviderData'?: string;
}
export interface MemoryDropParams {
    /**
     * Body param:
     */
    bank_id: string;
    /**
     * Header param: JSON-encoded provider data which will be made available to the
     * adapter servicing the API
     */
    'X-LlamaStack-ProviderData'?: string;
}
export interface MemoryInsertParams {
    /**
     * Body param:
     */
    bank_id: string;
    /**
     * Body param:
     */
    documents: Array<MemoryInsertParams.Document>;
    /**
     * Body param:
     */
    ttl_seconds?: number;
    /**
     * Header param: JSON-encoded provider data which will be made available to the
     * adapter servicing the API
     */
    'X-LlamaStack-ProviderData'?: string;
}
export declare namespace MemoryInsertParams {
    interface Document {
        content: string | Array<string>;
        document_id: string;
        metadata: Record<string, boolean | number | string | Array<unknown> | unknown | null>;
        mime_type?: string;
    }
}
export interface MemoryQueryParams {
    /**
     * Body param:
     */
    bank_id: string;
    /**
     * Body param:
     */
    query: string | Array<string>;
    /**
     * Body param:
     */
    params?: Record<string, boolean | number | string | Array<unknown> | unknown | null>;
    /**
     * Header param: JSON-encoded provider data which will be made available to the
     * adapter servicing the API
     */
    'X-LlamaStack-ProviderData'?: string;
}
export declare namespace Memory {
    export import QueryDocuments = MemoryAPI.QueryDocuments;
    export import MemoryCreateResponse = MemoryAPI.MemoryCreateResponse;
    export import MemoryRetrieveResponse = MemoryAPI.MemoryRetrieveResponse;
    export import MemoryListResponse = MemoryAPI.MemoryListResponse;
    export import MemoryDropResponse = MemoryAPI.MemoryDropResponse;
    export import MemoryCreateParams = MemoryAPI.MemoryCreateParams;
    export import MemoryRetrieveParams = MemoryAPI.MemoryRetrieveParams;
    export import MemoryUpdateParams = MemoryAPI.MemoryUpdateParams;
    export import MemoryListParams = MemoryAPI.MemoryListParams;
    export import MemoryDropParams = MemoryAPI.MemoryDropParams;
    export import MemoryInsertParams = MemoryAPI.MemoryInsertParams;
    export import MemoryQueryParams = MemoryAPI.MemoryQueryParams;
    export import Documents = DocumentsAPI.Documents;
    export import DocumentRetrieveResponse = DocumentsAPI.DocumentRetrieveResponse;
    export import DocumentRetrieveParams = DocumentsAPI.DocumentRetrieveParams;
    export import DocumentDeleteParams = DocumentsAPI.DocumentDeleteParams;
}
//# sourceMappingURL=memory.d.ts.map