import { APIResource } from "../resource.js";
import * as Core from "../core.js";
import * as RewardScoringAPI from "./reward-scoring.js";
import * as Shared from "./shared.js";
export declare class RewardScoringResource extends APIResource {
    score(params: RewardScoringScoreParams, options?: Core.RequestOptions): Core.APIPromise<RewardScoring>;
}
export interface RewardScoring {
    scored_generations: Array<ScoredDialogGenerations>;
}
export interface ScoredDialogGenerations {
    dialog: Array<Shared.UserMessage | Shared.SystemMessage | Shared.ToolResponseMessage | Shared.CompletionMessage>;
    scored_generations: Array<ScoredDialogGenerations.ScoredGeneration>;
}
export declare namespace ScoredDialogGenerations {
    interface ScoredGeneration {
        message: Shared.UserMessage | Shared.SystemMessage | Shared.ToolResponseMessage | Shared.CompletionMessage;
        score: number;
    }
}
export interface RewardScoringScoreParams {
    /**
     * Body param:
     */
    dialog_generations: Array<RewardScoringScoreParams.DialogGeneration>;
    /**
     * Body param:
     */
    model: string;
    /**
     * Header param: JSON-encoded provider data which will be made available to the
     * adapter servicing the API
     */
    'X-LlamaStack-ProviderData'?: string;
}
export declare namespace RewardScoringScoreParams {
    interface DialogGeneration {
        dialog: Array<Shared.UserMessage | Shared.SystemMessage | Shared.ToolResponseMessage | Shared.CompletionMessage>;
        sampled_generations: Array<Shared.UserMessage | Shared.SystemMessage | Shared.ToolResponseMessage | Shared.CompletionMessage>;
    }
}
export declare namespace RewardScoringResource {
    export import RewardScoring = RewardScoringAPI.RewardScoring;
    export import ScoredDialogGenerations = RewardScoringAPI.ScoredDialogGenerations;
    export import RewardScoringScoreParams = RewardScoringAPI.RewardScoringScoreParams;
}
//# sourceMappingURL=reward-scoring.d.ts.map