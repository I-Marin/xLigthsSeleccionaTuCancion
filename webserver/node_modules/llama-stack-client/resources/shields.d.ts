import { APIResource } from "../resource.js";
import * as Core from "../core.js";
import * as ShieldsAPI from "./shields.js";
export declare class Shields extends APIResource {
    list(params?: ShieldListParams, options?: Core.RequestOptions): Core.APIPromise<ShieldSpec>;
    list(options?: Core.RequestOptions): Core.APIPromise<ShieldSpec>;
    get(params: ShieldGetParams, options?: Core.RequestOptions): Core.APIPromise<ShieldSpec | null>;
}
export interface ShieldSpec {
    provider_config: ShieldSpec.ProviderConfig;
    shield_type: string;
}
export declare namespace ShieldSpec {
    interface ProviderConfig {
        config: Record<string, boolean | number | string | Array<unknown> | unknown | null>;
        provider_id: string;
    }
}
export interface ShieldListParams {
    /**
     * JSON-encoded provider data which will be made available to the adapter servicing
     * the API
     */
    'X-LlamaStack-ProviderData'?: string;
}
export interface ShieldGetParams {
    /**
     * Query param:
     */
    shield_type: string;
    /**
     * Header param: JSON-encoded provider data which will be made available to the
     * adapter servicing the API
     */
    'X-LlamaStack-ProviderData'?: string;
}
export declare namespace Shields {
    export import ShieldSpec = ShieldsAPI.ShieldSpec;
    export import ShieldListParams = ShieldsAPI.ShieldListParams;
    export import ShieldGetParams = ShieldsAPI.ShieldGetParams;
}
//# sourceMappingURL=shields.d.ts.map