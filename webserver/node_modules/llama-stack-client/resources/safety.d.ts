import { APIResource } from "../resource.js";
import * as Core from "../core.js";
import * as SafetyAPI from "./safety.js";
import * as Shared from "./shared.js";
export declare class Safety extends APIResource {
    runShield(params: SafetyRunShieldParams, options?: Core.RequestOptions): Core.APIPromise<RunSheidResponse>;
}
export interface RunSheidResponse {
    violation?: RunSheidResponse.Violation;
}
export declare namespace RunSheidResponse {
    interface Violation {
        metadata: Record<string, boolean | number | string | Array<unknown> | unknown | null>;
        violation_level: 'info' | 'warn' | 'error';
        user_message?: string;
    }
}
export interface SafetyRunShieldParams {
    /**
     * Body param:
     */
    messages: Array<Shared.UserMessage | Shared.SystemMessage | Shared.ToolResponseMessage | Shared.CompletionMessage>;
    /**
     * Body param:
     */
    params: Record<string, boolean | number | string | Array<unknown> | unknown | null>;
    /**
     * Body param:
     */
    shield_type: string;
    /**
     * Header param: JSON-encoded provider data which will be made available to the
     * adapter servicing the API
     */
    'X-LlamaStack-ProviderData'?: string;
}
export declare namespace Safety {
    export import RunSheidResponse = SafetyAPI.RunSheidResponse;
    export import SafetyRunShieldParams = SafetyAPI.SafetyRunShieldParams;
}
//# sourceMappingURL=safety.d.ts.map