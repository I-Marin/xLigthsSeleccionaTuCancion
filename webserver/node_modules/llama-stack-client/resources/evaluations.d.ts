import { APIResource } from "../resource.js";
import * as Core from "../core.js";
import * as EvaluationsAPI from "./evaluations.js";
import * as EvaluateAPI from "./evaluate/evaluate.js";
export declare class Evaluations extends APIResource {
    summarization(params: EvaluationSummarizationParams, options?: Core.RequestOptions): Core.APIPromise<EvaluateAPI.EvaluationJob>;
    textGeneration(params: EvaluationTextGenerationParams, options?: Core.RequestOptions): Core.APIPromise<EvaluateAPI.EvaluationJob>;
}
export interface EvaluationSummarizationParams {
    /**
     * Body param:
     */
    metrics: Array<'rouge' | 'bleu'>;
    /**
     * Header param: JSON-encoded provider data which will be made available to the
     * adapter servicing the API
     */
    'X-LlamaStack-ProviderData'?: string;
}
export interface EvaluationTextGenerationParams {
    /**
     * Body param:
     */
    metrics: Array<'perplexity' | 'rouge' | 'bleu'>;
    /**
     * Header param: JSON-encoded provider data which will be made available to the
     * adapter servicing the API
     */
    'X-LlamaStack-ProviderData'?: string;
}
export declare namespace Evaluations {
    export import EvaluationSummarizationParams = EvaluationsAPI.EvaluationSummarizationParams;
    export import EvaluationTextGenerationParams = EvaluationsAPI.EvaluationTextGenerationParams;
}
//# sourceMappingURL=evaluations.d.ts.map