import { APIResource } from "../resource.js";
import * as Core from "../core.js";
import * as SyntheticDataGenerationAPI from "./synthetic-data-generation.js";
import * as RewardScoringAPI from "./reward-scoring.js";
import * as Shared from "./shared.js";
export declare class SyntheticDataGenerationResource extends APIResource {
    generate(params: SyntheticDataGenerationGenerateParams, options?: Core.RequestOptions): Core.APIPromise<SyntheticDataGeneration>;
}
export interface SyntheticDataGeneration {
    synthetic_data: Array<RewardScoringAPI.ScoredDialogGenerations>;
    statistics?: Record<string, boolean | number | string | Array<unknown> | unknown | null>;
}
export interface SyntheticDataGenerationGenerateParams {
    /**
     * Body param:
     */
    dialogs: Array<Shared.UserMessage | Shared.SystemMessage | Shared.ToolResponseMessage | Shared.CompletionMessage>;
    /**
     * Body param:
     */
    filtering_function: 'none' | 'random' | 'top_k' | 'top_p' | 'top_k_top_p' | 'sigmoid';
    /**
     * Body param:
     */
    model?: string;
    /**
     * Header param: JSON-encoded provider data which will be made available to the
     * adapter servicing the API
     */
    'X-LlamaStack-ProviderData'?: string;
}
export declare namespace SyntheticDataGenerationResource {
    export import SyntheticDataGeneration = SyntheticDataGenerationAPI.SyntheticDataGeneration;
    export import SyntheticDataGenerationGenerateParams = SyntheticDataGenerationAPI.SyntheticDataGenerationGenerateParams;
}
//# sourceMappingURL=synthetic-data-generation.d.ts.map