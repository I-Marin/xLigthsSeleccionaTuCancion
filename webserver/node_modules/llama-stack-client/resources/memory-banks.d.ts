import { APIResource } from "../resource.js";
import * as Core from "../core.js";
import * as MemoryBanksAPI from "./memory-banks.js";
export declare class MemoryBanks extends APIResource {
    list(params?: MemoryBankListParams, options?: Core.RequestOptions): Core.APIPromise<MemoryBankSpec>;
    list(options?: Core.RequestOptions): Core.APIPromise<MemoryBankSpec>;
    get(params: MemoryBankGetParams, options?: Core.RequestOptions): Core.APIPromise<MemoryBankSpec | null>;
}
export interface MemoryBankSpec {
    bank_type: 'vector' | 'keyvalue' | 'keyword' | 'graph';
    provider_config: MemoryBankSpec.ProviderConfig;
}
export declare namespace MemoryBankSpec {
    interface ProviderConfig {
        config: Record<string, boolean | number | string | Array<unknown> | unknown | null>;
        provider_id: string;
    }
}
export interface MemoryBankListParams {
    /**
     * JSON-encoded provider data which will be made available to the adapter servicing
     * the API
     */
    'X-LlamaStack-ProviderData'?: string;
}
export interface MemoryBankGetParams {
    /**
     * Query param:
     */
    bank_type: 'vector' | 'keyvalue' | 'keyword' | 'graph';
    /**
     * Header param: JSON-encoded provider data which will be made available to the
     * adapter servicing the API
     */
    'X-LlamaStack-ProviderData'?: string;
}
export declare namespace MemoryBanks {
    export import MemoryBankSpec = MemoryBanksAPI.MemoryBankSpec;
    export import MemoryBankListParams = MemoryBanksAPI.MemoryBankListParams;
    export import MemoryBankGetParams = MemoryBanksAPI.MemoryBankGetParams;
}
//# sourceMappingURL=memory-banks.d.ts.map